# infra/docker/docker-compose.app.yml

services:
  backend:
    build:
      context: ../../
      dockerfile: apps/backend/Dockerfile
    env_file:
      - ../../.env.example
      - ../../apps/backend/.env.example
      - ../../.env
    environment:
      PORT: 3000
      NODE_ENV: production
      REDIS_URL: redis://pivotal-redis:6379
      REDIS_HOST: pivotal-redis
      DATABASE_URL: postgresql://pivotal:pivotal@pivotal-postgres:5432/pivotal
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - devnet
    # Healthcheck is now built into the Dockerfile
    profiles:
      - local_db

  frontend:
    build:
      context: ../..
      dockerfile: apps/frontend/Dockerfile
    depends_on:
      - backend
    ports:
      - "8080:8080"
    networks:
      - devnet
    profiles:
      - local_db

  migrate:
    image: node:20-alpine
    working_dir: /app
    env_file:
      - ../../.env.example
      - ../../apps/backend/.env.example
      - ../../.env
    volumes:
      - ../..:/app
    entrypoint: [ "sh", "-lc", "cd apps/backend && corepack enable && pnpm install && pnpm drizzle-kit migrate" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - devnet
    restart: "no"
    profiles:
      - local_db

  migrate-prod:
    image: node:20-alpine
    working_dir: /app
    env_file:
      - ../../.env.example
      - ../../apps/backend/.env.example
      - ../../.env
    volumes:
      - ../..:/app
    entrypoint: [ "sh", "-lc", "cd apps/backend && corepack enable && pnpm install --frozen-lockfile && pnpm db:migrate:ci" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - devnet
    restart: "no"
    profiles:
      - production

networks:
  devnet:
    external: true
