# Docker Compose v2 format (no version needed)

services:
  postgres:
    image: postgres:16
    container_name: pivotal-postgres
    profiles:
      - local_db
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pivotal}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pivotal}
      POSTGRES_DB: ${POSTGRES_DB:-pivotal}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U pivotal -d pivotal -c 'select 1'"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - devnet
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: pivotal-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    networks:
      - devnet
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: pivotal-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - devnet
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: pivotal-grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: ""
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - devnet
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  prometheus_data:
    driver: local
  grafanadata:
    driver: local

networks:
  devnet:
    driver: bridge
    name: pivotal-devnet
