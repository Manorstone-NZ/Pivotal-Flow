#!/usr/bin/env bash

# Pivotal Flow - Docker Development Stack Startup Script
# This script starts the local development environment with PostgreSQL, Redis, Prometheus, and Grafana

set -e

echo "üê≥ Starting Pivotal Flow development stack..."

# Check if Docker is running
if ! sudo docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker and try again."
    exit 1
fi

# Check if docker-compose is available
if ! command -v docker compose > /dev/null 2>&1; then
    echo "‚ùå Docker Compose is not available. Please install Docker Compose and try again."
    exit 1
fi

# Navigate to the project root (assuming script is run from project root)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"
cd "$PROJECT_ROOT"

# Check if .env file exists, if not create from example
if [ ! -f ".env" ]; then
    if [ -f "env.example" ]; then
        echo "üìù Creating .env file from env.example..."
        cp env.example .env
        echo "‚úÖ .env file created. Please review and update any sensitive values."
    else
        echo "‚ö†Ô∏è  No .env or env.example file found. Using default values."
    fi
fi

# Start the services
echo "üöÄ Starting services..."
sudo docker compose -f infra/docker/docker-compose.yml up -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be healthy..."
sleep 10

# Check service health
echo "üîç Checking service health..."

# Check PostgreSQL
if sudo docker compose -f infra/docker/docker-compose.yml exec -T postgres pg_isready -U pivotal > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL is healthy"
else
    echo "‚ö†Ô∏è  PostgreSQL health check failed, but service may still be starting..."
fi

# Check Redis
if sudo docker compose -f infra/docker/docker-compose.yml exec -T redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is healthy"
else
    echo "‚ö†Ô∏è  Redis health check failed, but service may still be starting..."
fi

# Check Prometheus
if curl -s http://localhost:9090/-/healthy > /dev/null 2>&1; then
    echo "‚úÖ Prometheus is healthy"
else
    echo "‚ö†Ô∏è  Prometheus health check failed, but service may still be starting..."
fi

# Check Grafana
if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
    echo "‚úÖ Grafana is healthy"
else
    echo "‚ö†Ô∏è  Grafana health check failed, but service may still be starting..."
fi

echo ""
echo "üéâ Pivotal Flow development stack is starting!"
echo ""
echo "üìä Services:"
echo "  ‚Ä¢ PostgreSQL: localhost:5433 (pivotal/pivotal)"
echo "  ‚Ä¢ Redis: localhost:6379"
echo "  ‚Ä¢ Prometheus: http://localhost:9090"
echo "  ‚Ä¢ Grafana: http://localhost:3001 (admin/admin)"
echo ""
echo "üîß Useful commands:"
echo "  ‚Ä¢ View logs: ./scripts/docker/logs.sh"
echo "  ‚Ä¢ Stop services: ./scripts/docker/down.sh"
echo "  ‚Ä¢ Connect to PostgreSQL: ./scripts/db/psql.sh"
echo "  ‚Ä¢ Connect to Redis: ./scripts/redis/cli.sh"
echo ""
echo "‚è≥ Services may take a few minutes to fully start up..."
